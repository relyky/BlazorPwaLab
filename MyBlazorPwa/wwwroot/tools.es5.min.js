"use strict";function scanQrCodeAsync(n){return regeneratorRuntime.async(function(t){for(var i=this;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,regeneratorRuntime.awrap(function(){var u,t,r;return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:return u=new Html5Qrcode("reader"),i.next=3,regeneratorRuntime.awrap(Html5Qrcode.getCameras());case 3:return t=i.sent,i.next=6,regeneratorRuntime.awrap(Promise.resolve(new Promise(function(n,i){t&&t.length?n(t[0].id):i(new Error("Not found camera!"))})));case 6:r=i.sent;console.log("devices",{cameraId:r,devices:t});u.start(r,{fps:10,qrbox:250},function(t){console.info("qrCodeMessage",t);n.invokeMethodAsync("OnScanResponse","SUCCESS",t)},function(t){console.warn("Parse error, ignore it.",t);n.invokeMethodAsync("OnScanResponse","WARN","Parse error. "+t)})["catch"](function(t){console.error("Start failed, handle it.",t);n.invokeMethodAsync("OnScanResponse","ERROR","Start failed! "+JSON.stringify(t))});case 9:case"end":return i.stop()}},null,i)}());case 3:t.next=9;break;case 5:t.prev=5;t.t0=t["catch"](0);console.error("scanQrCode Exception!",t.t0);n.invokeMethodAsync("OnScanResponse","EXCEPTION","scanQrCode Exception! "+JSON.stringify(t.t0));case 9:return t.prev=9,t.finish(9);case 11:case"end":return t.stop()}},null,this,[[0,5,9,11]])}